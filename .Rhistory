text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
predMat <- predict(dt, test, type = "prob")
CA(observed, predicted)
klasifikacija$Metoda <- "rpart"
klasifikacija$CA <- CA(observed, predicted)
install.packages("randomForest")
library(randomForest)
observed <- test$WIN
rf <- randomForest(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(rf, test, type = "class")
klasifikacija$Metoda <- "randomForest"
klasifikacija$CA <- CA(observed, predicted)
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
predMat <- predict(dt, test, type = "prob")
klasifikacija$Metoda <- "rpart"
klasifikacija$CA <- CA(observed, predicted)
klasifikacija <- data.frame("Metoda", "CA")
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
klasifikacija$Metoda <- "rpart"
klasifikacija$CA <- CA(observed, predicted)
View(klasifikacija)
klasifikacija <- data.frame()
klasifikacija$Metoda <- "rpart"
klasifikacija$CA <- CA(observed, predicted)
klasifikacija <- data.frame(Metoda, CA)
klasifikacija$rpart <- "rpart"
klasifikacija <- data.frame("rpart", CA(observed, predicted)
klasifikacija <- data.frame("rpart", CA(observed, predicted))
klasifikacija <- data.frame("rpart", CA(observed, predicted))
View(klasifikacija)
klasifikacija <- data.frame("rpart", CA(observed, predicted))
colnames(klasifikacija) <- c("Metoda", "CA")
majority <- names(which.max(table(learn$WIN)))
sum(test$WIN == majority) / length(test$WIN)
################################################VECINSKI
#install.packages("rpart")
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
klasifikacija <- data.frame("rpart", CA(observed, predicted))
colnames(klasifikacija) <- c("Metoda", "CA")
#install.packages("randomForest")
library(randomForest)
observed <- test$WIN
rf <- randomForest(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(rf, test, type = "class")
klasifikacija <- data.frame("randomForest", CA(observed, predicted))
#install.packages("e1071")
library(e1071)
nb <- naiveBayes(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(nb, test, type="class")
CA(observed, predicted)
klasifikacija <- data.frame("naiveBayes", CA(observed, predicted))
library(CORElearn)
nb <- CoreModel(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, model="bayes")
predicted <- predict(nb, test, type="class")
CA(observed, predicted)
klasifikacija <- data.frame("CoreModel", CA(observed, predicted))
majority <- names(which.max(table(learn$WIN)))
sum(test$WIN == majority) / length(test$WIN)
################################################VECINSKI
#install.packages("rpart")
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
klasifikacija <- data.frame("rpart", CA(observed, predicted))
colnames(klasifikacija) <- c("Metoda", "CA")
#install.packages("randomForest")
library(randomForest)
observed <- test$WIN
rf <- randomForest(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(rf, test, type = "class")
klasifikacija <- data.frame("randomForest", CA(observed, predicted))
#install.packages("e1071")
library(e1071)
nb <- naiveBayes(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(nb, test, type="class")
klasifikacija <- data.frame("naiveBayes", CA(observed, predicted))
library(CORElearn)
nb <- CoreModel(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, model="bayes")
predicted <- predict(nb, test, type="class")
klasifikacija <- data.frame("CoreModel", CA(observed, predicted))
klasifikacija
klasifikacija <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(klasifikacija) <- c("Metoda", "CA")
################################################KLASIFIKACIJA
majority <- names(which.max(table(learn$WIN)))
sum(test$WIN == majority) / length(test$WIN)
################################################VECINSKI
#install.packages("rpart")
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
temp <- data.frame("rpart", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
klasifikacija <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(klasifikacija) <- c("Metoda", "CA")
################################################KLASIFIKACIJA
majority <- names(which.max(table(learn$WIN)))
majority <- sum(test$WIN == majority) / length(test$WIN)
temp <- data.frame("majority", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
################################################VECINSKI
#install.packages("rpart")
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
temp <- data.frame("rpart", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
#install.packages("randomForest")
library(randomForest)
observed <- test$WIN
rf <- randomForest(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(rf, test, type = "class")
temp <- data.frame("randomForest", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
klasifikacija <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(klasifikacija) <- c("Metoda", "CA")
################################################KLASIFIKACIJA
majority <- names(which.max(table(learn$WIN)))
majority <- sum(test$WIN == majority) / length(test$WIN)
temp <- data.frame("majority", majority)
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
################################################VECINSKI
#install.packages("rpart")
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
temp <- data.frame("rpart", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
#install.packages("randomForest")
library(randomForest)
observed <- test$WIN
rf <- randomForest(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(rf, test, type = "class")
temp <- data.frame("randomForest", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
#install.packages("e1071")
library(e1071)
nb <- naiveBayes(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(nb, test, type="class")
temp <- data.frame("randomForest", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
library(CORElearn)
nb <- CoreModel(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, model="bayes")
predicted <- predict(nb, test, type="class")
temp <- data.frame("randomForest", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
klasifikacija
majority <- names(which.max(table(learn$ABS_DIFF)))
majority <- sum(test$ABS_DIFF == majority) / length(test$ABS_DIFF)
majority
allSeason <- data.frame(matrix(ncol = 15, nrow = 0))
colnames(allSeason) <- c("DATE", "HOME", "HPTS", "H2PM", "H2PA", "H3PM", "H3PA", "AWAY", "APTS", "A2PM", "A2PA", "A3PM", "A3PA", "WIN", "ABS_DIFF")
for (i in 201:1230) {
nov <- data.frame(regular$DATE[i],
regular$HOME[i],
povp(regular$HOME[i], regular$DATE[i], "HPTS"),
povp(regular$HOME[i], regular$DATE[i], "H2PM"),
povp(regular$HOME[i], regular$DATE[i], "H2PA"),
povp(regular$HOME[i], regular$DATE[i], "H3PM"),
povp(regular$HOME[i], regular$DATE[i], "H3PA"),
regular$AWAY[i],
povp(regular$HOME[i], regular$DATE[i], "APTS"),
povp(regular$AWAY[i], regular$DATE[i], "A2PM"),
povp(regular$AWAY[i], regular$DATE[i], "A2PA"),
povp(regular$AWAY[i], regular$DATE[i], "A3PM"),
povp(regular$AWAY[i], regular$DATE[i], "A2PA"),
regular$WINNER[i],
regular$ABS_DIFF[i])
colnames(nov) <- c("DATE", "HOME", "HPTS", "H2PM", "H2PA", "H3PM", "H3PA", "AWAY", "APTS", "A2PM", "A2PA", "A3PM", "A3PA", "WIN", "ABS_DIFF")
allSeason <- rbind(allSeason, nov)
}
learn <- allSeason[1:824,]
test <- allSeason[825:1030,]
learn$HOME <- as.factor(learn$HOME)
learn$AWAY <- as.factor(learn$AWAY)
test$HOME <- as.factor(test$HOME)
test$AWAY <- as.factor(test$AWAY)
learn$WIN <- as.factor(learn$WIN)
test$WIN <- as.factor(test$WIN)
regresija <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(regresija) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
library(rpart)
observed <- test$ABS_DIFF
rt1 <- rpart(ABS_DIFF ~ ., data = learn)
predicted <- predict(rt1, test)
temp <- data.frame("1st - rpart(neporezan) 1st", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#plot(rt1)
#text(rt1, pretty = 0)
#Ga porezem
rt2 <- rpart(ABS_DIFF ~ ., data = learn)
rt2 <- prune(rt2, cp = 0.02)
predicted <- predict(rt2, test)
temp <- data.frame("rpart(porezan) 2nd", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#plot(rt2)
#text(rt2, pretty = 0)
cm1 <- CoreModel(ABS_DIFF ~ ., data=learn, model="regTree", modelTypeReg = 1)
#plot(cm1, learn)
predicted <- predict(cm1, test)
temp <- data.frame("CoreModel 1st", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
cm2 <- CoreModel(ABS_DIFF ~ ., data=learn, model="regTree", modelTypeReg = 1, selectedPrunerReg = 2)
#plot(cm2, learn)
predicted <- predict(cm2, test)
temp <- data.frame("CoreModel 2nd", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
library(randomForest)
rf <- randomForest(ABS_DIFF ~ ., learn)
predicted <- predict(rf, test)
temp <- data.frame("randomForest", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
install.packages("kknn")
library(kknn)
kknn <- kknn(ABS_DIFF ~ ., learn, test, k = 67)
predicted <- fitted(kknn)
temp <- data.frame("kknn", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
regresija
install.packages("kknn")
regresija <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(regresija) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
library(rpart)
observed <- test$ABS_DIFF
rt1 <- rpart(ABS_DIFF ~ ., data = learn)
predicted <- predict(rt1, test)
temp <- data.frame("rpart(neporezan) 1st", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#plot(rt1)
#text(rt1, pretty = 0)
#Ga porezem
rt2 <- rpart(ABS_DIFF ~ ., data = learn)
rt2 <- prune(rt2, cp = 0.02)
predicted <- predict(rt2, test)
temp <- data.frame("rpart(porezan) 2nd", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#plot(rt2)
#text(rt2, pretty = 0)
cm1 <- CoreModel(ABS_DIFF ~ ., data=learn, model="regTree", modelTypeReg = 1)
#plot(cm1, learn)
predicted <- predict(cm1, test)
temp <- data.frame("CoreModel 1st", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
cm2 <- CoreModel(ABS_DIFF ~ ., data=learn, model="regTree", modelTypeReg = 1, selectedPrunerReg = 2)
#plot(cm2, learn)
predicted <- predict(cm2, test)
temp <- data.frame("CoreModel 2nd", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
library(randomForest)
rf <- randomForest(ABS_DIFF ~ ., learn)
predicted <- predict(rf, test)
temp <- data.frame("randomForest", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#install.packages("kknn")
library(kknn)
kknn <- kknn(ABS_DIFF ~ ., learn, test, k = 67)
predicted <- fitted(kknn)
temp <- data.frame("kknn", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
regresija
klasifikacija
setwd("C:/Users/Non5ens3/Desktop/UI/Seminarska")
CA <- function(observed, predicted)
{
length(observed[observed == predicted]) / length(observed)
}
brier.score <- function(observedMatrix, predictedMatrix)
{
sum((observedMatrix - predictedMatrix) ^ 2) / nrow(predictedMatrix)
}
mae <- function(observed, predicted)
{
mean(abs(observed - predicted))
}
rmae <- function(observed, predicted, mean.val)
{
sum(abs(observed - predicted)) / sum(abs(observed - mean.val))
}
mse <- function(observed, predicted)
{
mean((observed - predicted)^2)
}
rmse <- function(observed, predicted, mean.val)
{
sum((observed - predicted)^2)/sum((observed - mean.val)^2)
}
povp <- function(teamName, datum, parameter)
{
where <- substring(parameter, 1, 1)
if (where == "H") {
nova <- regular[regular$DATE < datum,]
home <- aggregate(nova[parameter], list(nova$HOME), mean)
home[home$Group.1 == teamName,2]
}
else
{
nova <- regular[regular$DATE < datum,]
home <- aggregate(nova[parameter], list(nova$AWAY), mean)
home[home$Group.1 == teamName,2]
}
}
regular <- read.table("regular.txt", header = T, sep = ",")
regular$HOME <- as.character(regular$HOME)
regular$AWAY <- as.character(regular$AWAY)
winners <- c()
loosers <- c()
for (i in 1:nrow(regular)) {
if (regular$HPTS[i] > regular$APTS[i]) {
winners[i] <- "H"
loosers[i] <- "A"
}
else {
winners[i] <- "A"
loosers[i] <- "H"
}
}
regular$WINNER <- winners
regular$LOOSER <- loosers
abs_Diff <- c()
for (i in 1:nrow(regular)) {
abs_Diff[i] <- abs(regular$HPTS[i] - regular$APTS[i])
}
regular$ABS_DIFF <- abs_Diff
regular
allSeason <- data.frame(matrix(ncol = 15, nrow = 0))
colnames(allSeason) <- c("DATE", "HOME", "HPTS", "H2PM", "H2PA", "H3PM", "H3PA", "AWAY", "APTS", "A2PM", "A2PA", "A3PM", "A3PA", "WIN", "ABS_DIFF")
for (i in 201:1230) {
nov <- data.frame(regular$DATE[i],
regular$HOME[i],
povp(regular$HOME[i], regular$DATE[i], "HPTS"),
povp(regular$HOME[i], regular$DATE[i], "H2PM"),
povp(regular$HOME[i], regular$DATE[i], "H2PA"),
povp(regular$HOME[i], regular$DATE[i], "H3PM"),
povp(regular$HOME[i], regular$DATE[i], "H3PA"),
regular$AWAY[i],
povp(regular$AWAY[i], regular$DATE[i], "APTS"),
povp(regular$AWAY[i], regular$DATE[i], "A2PM"),
povp(regular$AWAY[i], regular$DATE[i], "A2PA"),
povp(regular$AWAY[i], regular$DATE[i], "A3PM"),
povp(regular$AWAY[i], regular$DATE[i], "A3PA"),
regular$WINNER[i],
regular$ABS_DIFF[i])
colnames(nov) <- c("DATE", "HOME", "HPTS", "H2PM", "H2PA", "H3PM", "H3PA", "AWAY", "APTS", "A2PM", "A2PA", "A3PM", "A3PA", "WIN", "ABS_DIFF")
allSeason <- rbind(allSeason, nov)
}
learn <- allSeason[1:824,]
test <- allSeason[825:1030,]
klasifikacija <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(klasifikacija) <- c("Metoda", "CA")
################################################KLASIFIKACIJA
majority <- names(which.max(table(learn$WIN)))
majority <- sum(test$WIN == majority) / length(test$WIN)
temp <- data.frame("majority", majority)
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
################################################VECINSKI
#install.packages("rpart")
library(rpart)
observed <- test$WIN
dt <- rpart(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, cp = 0.02, minsplit = 30)
plot(dt)
text(dt, pretty=0)
predicted <- predict(dt, test, type = "class")
temp <- data.frame("rpart", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
#install.packages("randomForest")
library(randomForest)
observed <- test$WIN
rf <- randomForest(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(rf, test, type = "class")
temp <- data.frame("randomForest", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
#install.packages("e1071")
library(e1071)
nb <- naiveBayes(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn)
predicted <- predict(nb, test, type="class")
temp <- data.frame("naiveBayes", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
library(CORElearn)
nb <- CoreModel(WIN ~ HPTS+APTS+H2PM+A2PM+H2PA+A2PA+H3PM+A3PM+H3PA+A3PA, data = learn, model="bayes")
predicted <- predict(nb, test, type="class")
temp <- data.frame("CoreModel", CA(observed, predicted))
colnames(temp) <- c("Metoda", "CA")
klasifikacija <- rbind(klasifikacija, temp)
klasifikacija
allSeason <- data.frame(matrix(ncol = 15, nrow = 0))
colnames(allSeason) <- c("DATE", "HOME", "HPTS", "H2PM", "H2PA", "H3PM", "H3PA", "AWAY", "APTS", "A2PM", "A2PA", "A3PM", "A3PA", "WIN", "ABS_DIFF")
for (i in 201:1230) {
nov <- data.frame(regular$DATE[i],
regular$HOME[i],
povp(regular$HOME[i], regular$DATE[i], "HPTS"),
povp(regular$HOME[i], regular$DATE[i], "H2PM"),
povp(regular$HOME[i], regular$DATE[i], "H2PA"),
povp(regular$HOME[i], regular$DATE[i], "H3PM"),
povp(regular$HOME[i], regular$DATE[i], "H3PA"),
regular$AWAY[i],
povp(regular$HOME[i], regular$DATE[i], "APTS"),
povp(regular$AWAY[i], regular$DATE[i], "A2PM"),
povp(regular$AWAY[i], regular$DATE[i], "A2PA"),
povp(regular$AWAY[i], regular$DATE[i], "A3PM"),
povp(regular$AWAY[i], regular$DATE[i], "A2PA"),
regular$WINNER[i],
regular$ABS_DIFF[i])
colnames(nov) <- c("DATE", "HOME", "HPTS", "H2PM", "H2PA", "H3PM", "H3PA", "AWAY", "APTS", "A2PM", "A2PA", "A3PM", "A3PA", "WIN", "ABS_DIFF")
allSeason <- rbind(allSeason, nov)
}
learn <- allSeason[1:824,]
test <- allSeason[825:1030,]
learn$HOME <- as.factor(learn$HOME)
learn$AWAY <- as.factor(learn$AWAY)
test$HOME <- as.factor(test$HOME)
test$AWAY <- as.factor(test$AWAY)
learn$WIN <- as.factor(learn$WIN)
test$WIN <- as.factor(test$WIN)
regresija <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(regresija) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
library(rpart)
observed <- test$ABS_DIFF
rt1 <- rpart(ABS_DIFF ~ ., data = learn)
predicted <- predict(rt1, test)
temp <- data.frame("rpart(neporezan) 1st", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#plot(rt1)
#text(rt1, pretty = 0)
#Ga porezem
rt2 <- rpart(ABS_DIFF ~ ., data = learn)
rt2 <- prune(rt2, cp = 0.02)
predicted <- predict(rt2, test)
temp <- data.frame("rpart(porezan) 2nd", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#plot(rt2)
#text(rt2, pretty = 0)
cm1 <- CoreModel(ABS_DIFF ~ ., data=learn, model="regTree", modelTypeReg = 1)
#plot(cm1, learn)
predicted <- predict(cm1, test)
temp <- data.frame("CoreModel 1st", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
cm2 <- CoreModel(ABS_DIFF ~ ., data=learn, model="regTree", modelTypeReg = 1, selectedPrunerReg = 2)
#plot(cm2, learn)
predicted <- predict(cm2, test)
temp <- data.frame("CoreModel 2nd", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
library(randomForest)
rf <- randomForest(ABS_DIFF ~ ., learn)
predicted <- predict(rf, test)
temp <- data.frame("randomForest", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
#install.packages("kknn")
library(kknn)
kknn <- kknn(ABS_DIFF ~ ., learn, test, k = 67)
predicted <- fitted(kknn)
temp <- data.frame("kknn", mae(observed, predicted), rmae(observed, predicted, mean(learn$ABS_DIFF)), mse(observed, predicted), rmse(observed, predicted, mean(learn$ABS_DIFF)))
colnames(temp) <- c("Metoda", "MAE", "RMAE", "MSE", "RMSE")
regresija <- rbind(regresija, temp)
regresija
